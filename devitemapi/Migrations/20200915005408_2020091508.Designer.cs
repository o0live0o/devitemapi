// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using devitemapi.Entity;

namespace devitemapi.Migrations
{
    [DbContext(typeof(DevDbContext))]
    [Migration("20200915005408_2020091508")]
    partial class _2020091508
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("devitemapi.Entity.DevAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ActionCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ActionName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("DevActions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b48a7f0-4077-4c1e-acd5-87ef0a8ace93"),
                            ActionCode = "Query",
                            ActionName = "查询",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("532e849c-b3d5-4d55-abfe-6e645ba2bae2"),
                            ActionCode = "Add",
                            ActionName = "增加",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("39579c2f-7f92-4cd0-bf51-76a7a01c8e16"),
                            ActionCode = "Delete",
                            ActionName = "删除",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("255f3693-099d-432a-9a80-e377976f9c22"),
                            ActionCode = "View",
                            ActionName = "查看",
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.DevMenu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MenuCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MenuName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Path")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("DevMenus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("19b93b25-5230-425b-b5c5-625b708915b5"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "/item.ico",
                            MenuCode = "Index",
                            MenuName = "首页",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ParentId = new Guid("edc8f6c4-d734-49cf-9250-759d966e8641"),
                            Path = "localhost:8080"
                        },
                        new
                        {
                            Id = new Guid("daf50ad9-c46b-43de-aab2-ca4418785ba3"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "/item.ico",
                            MenuCode = "About",
                            MenuName = "关于",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ParentId = new Guid("edc8f6c4-d734-49cf-9250-759d966e8641"),
                            Path = "localhost/about:8080"
                        },
                        new
                        {
                            Id = new Guid("a5e189c0-166a-4b37-93ee-45ecf1ff11c5"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "/item.ico",
                            MenuCode = "System",
                            MenuName = "系统设置",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ParentId = new Guid("edc8f6c4-d734-49cf-9250-759d966e8641"),
                            Path = "localhost/system:8080"
                        },
                        new
                        {
                            Id = new Guid("1ce75274-4033-4081-88d0-6ba7ef00fddd"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Icon = "/item.ico",
                            MenuCode = "People",
                            MenuName = "人员管理",
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ParentId = new Guid("a5e189c0-166a-4b37-93ee-45ecf1ff11c5"),
                            Path = "localhost/people:8080"
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.DevMenuAction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("DevMenuActions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba6612d8-0f28-43c7-b4ec-5fb8e130b635"),
                            ActionId = new Guid("7b48a7f0-4077-4c1e-acd5-87ef0a8ace93"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("1ce75274-4033-4081-88d0-6ba7ef00fddd"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("41dbae89-4b0c-4407-b18a-75d702639684"),
                            ActionId = new Guid("532e849c-b3d5-4d55-abfe-6e645ba2bae2"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("1ce75274-4033-4081-88d0-6ba7ef00fddd"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("90f6e437-9fe3-4d5e-93b1-0d5e05d9d20d"),
                            ActionId = new Guid("7b48a7f0-4077-4c1e-acd5-87ef0a8ace93"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("19b93b25-5230-425b-b5c5-625b708915b5"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("235deae7-b378-488e-bab9-4523a84d620b"),
                            ActionId = new Guid("532e849c-b3d5-4d55-abfe-6e645ba2bae2"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("19b93b25-5230-425b-b5c5-625b708915b5"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8df1d3ce-ed8a-4221-ae7d-12a886593cc5"),
                            ActionId = new Guid("7b48a7f0-4077-4c1e-acd5-87ef0a8ace93"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("daf50ad9-c46b-43de-aab2-ca4418785ba3"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("997ef473-3aff-4db5-aec4-4feeefc3c8b6"),
                            ActionId = new Guid("7b48a7f0-4077-4c1e-acd5-87ef0a8ace93"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("a5e189c0-166a-4b37-93ee-45ecf1ff11c5"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.DevPermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ActionId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("DevPermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9372ae7-ebd4-4c4b-9e64-f55965d35e78"),
                            ActionId = new Guid("7b48a7f0-4077-4c1e-acd5-87ef0a8ace93"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("19b93b25-5230-425b-b5c5-625b708915b5"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("557b25cc-463d-4116-9d7d-5003d6acbf6a")
                        },
                        new
                        {
                            Id = new Guid("028d9d91-2f5f-4503-803c-8296c4bae426"),
                            ActionId = new Guid("532e849c-b3d5-4d55-abfe-6e645ba2bae2"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("19b93b25-5230-425b-b5c5-625b708915b5"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("557b25cc-463d-4116-9d7d-5003d6acbf6a")
                        },
                        new
                        {
                            Id = new Guid("e55c31ba-e4fc-4682-a4ad-b5eee06d2b3b"),
                            ActionId = new Guid("532e849c-b3d5-4d55-abfe-6e645ba2bae2"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("daf50ad9-c46b-43de-aab2-ca4418785ba3"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("557b25cc-463d-4116-9d7d-5003d6acbf6a")
                        },
                        new
                        {
                            Id = new Guid("f93a453e-a93d-4314-803d-fe586c119bcd"),
                            ActionId = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("a5e189c0-166a-4b37-93ee-45ecf1ff11c5"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("557b25cc-463d-4116-9d7d-5003d6acbf6a")
                        },
                        new
                        {
                            Id = new Guid("3e41c160-9781-4818-afb5-3d33455ab754"),
                            ActionId = new Guid("532e849c-b3d5-4d55-abfe-6e645ba2bae2"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MenuId = new Guid("1ce75274-4033-4081-88d0-6ba7ef00fddd"),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("557b25cc-463d-4116-9d7d-5003d6acbf6a")
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.DevRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("RoleCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoleName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DevRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("557b25cc-463d-4116-9d7d-5003d6acbf6a"),
                            CreateDate = new DateTime(2020, 9, 15, 8, 54, 8, 350, DateTimeKind.Local).AddTicks(6816),
                            ModifyDate = new DateTime(2020, 9, 15, 8, 54, 8, 350, DateTimeKind.Local).AddTicks(7001),
                            RoleCode = "SuperAdmin",
                            RoleName = "超级管理员",
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("78d6d23b-64c1-4d23-b766-a19276be3d1c"),
                            CreateDate = new DateTime(2020, 9, 15, 8, 54, 8, 350, DateTimeKind.Local).AddTicks(7088),
                            ModifyDate = new DateTime(2020, 9, 15, 8, 54, 8, 350, DateTimeKind.Local).AddTicks(7089),
                            RoleCode = "Admin",
                            RoleName = "管理员",
                            Status = 1
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.DevUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Account")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EMail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("DevUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc9e5615-17d5-4ca2-adf9-200f903e0a7d"),
                            Account = "Administrator",
                            CreateDate = new DateTime(2020, 9, 15, 8, 54, 8, 348, DateTimeKind.Local).AddTicks(8054),
                            ModifyDate = new DateTime(2020, 9, 15, 8, 54, 8, 348, DateTimeKind.Local).AddTicks(8376),
                            Pwd = "123456",
                            Status = 1,
                            UserName = "超级管理员"
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.DevUserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Useid")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("DevUserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9372ae7-ebd4-4c4b-9e64-f55965d35e78"),
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifyDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RoleId = new Guid("557b25cc-463d-4116-9d7d-5003d6acbf6a"),
                            Useid = new Guid("bc9e5615-17d5-4ca2-adf9-200f903e0a7d")
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.nlogrec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Application")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Callsite")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Levels")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LogContent")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Logger")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Message")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Operatingaddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Operatingtime")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Referrerurl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Requesturl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Userid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Nlogrecs");
                });
#pragma warning restore 612, 618
        }
    }
}
