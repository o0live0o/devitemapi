// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using devitemapi.Entity;

namespace devitemapi.Migrations
{
    [DbContext(typeof(WxDbContext))]
    [Migration("20201204090104_init01")]
    partial class init01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("devitemapi.Entity.WxAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActionCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ActionName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WxActions");
                });

            modelBuilder.Entity("devitemapi.Entity.WxGoldDailyPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConsignmentId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("GainTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("GoldAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SellerRoleName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ServerId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ServerName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ZoneId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ZoneName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("WxGoldDailyPrice");
                });

            modelBuilder.Entity("devitemapi.Entity.WxMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MenuCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MenuName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("WxMenus");
                });

            modelBuilder.Entity("devitemapi.Entity.WxMenuAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("WxMenuActions");
                });

            modelBuilder.Entity("devitemapi.Entity.WxNlogRec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Application")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Callsite")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Levels")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LogContent")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Logger")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Message")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Operatingaddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Operatingtime")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Referrerurl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Requesturl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Userid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("WxNlogrecs");
                });

            modelBuilder.Entity("devitemapi.Entity.WxPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("WxPermissions");
                });

            modelBuilder.Entity("devitemapi.Entity.WxRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("RoleCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoleName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WxRoles");
                });

            modelBuilder.Entity("devitemapi.Entity.WxUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Account")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("EMail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Pwd")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("UserCode")
                        .IsUnique();

                    b.ToTable("WxUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "Administrator",
                            Age = 1,
                            CreateDate = new DateTime(2020, 12, 4, 17, 1, 4, 163, DateTimeKind.Local).AddTicks(495),
                            CreateUserId = 0,
                            ModifyDate = new DateTime(2020, 12, 4, 17, 1, 4, 162, DateTimeKind.Local).AddTicks(9556),
                            ModifyUserId = 0,
                            Pwd = "123456",
                            Sex = 1,
                            Status = 0,
                            UserCode = "0100001",
                            UserName = "超级管理员"
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.WxUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WxUserRoles");
                });

            modelBuilder.Entity("devitemapi.Entity.WxMenuAction", b =>
                {
                    b.HasOne("devitemapi.Entity.WxMenu", "DevMenu")
                        .WithMany("DevMenuActions")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("devitemapi.Entity.WxPermission", b =>
                {
                    b.HasOne("devitemapi.Entity.WxRole", "WxRole")
                        .WithMany("DevPermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("devitemapi.Entity.WxUserRole", b =>
                {
                    b.HasOne("devitemapi.Entity.WxUser", "User")
                        .WithMany("DevUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
