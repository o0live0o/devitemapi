// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using devitemapi.Entity;

namespace devitemapi.Migrations
{
    [DbContext(typeof(WxDbContext))]
    [Migration("20201208034259_20201208")]
    partial class _20201208
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("devitemapi.Entity.WxAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActionCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ActionName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WxActions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionCode = "view",
                            ActionName = "查看",
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(8304),
                            CreateUserId = 0,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(8309),
                            ModifyUserId = 0
                        },
                        new
                        {
                            Id = 2,
                            ActionCode = "add",
                            ActionName = "增加",
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(9251),
                            CreateUserId = 0,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(9256),
                            ModifyUserId = 0
                        },
                        new
                        {
                            Id = 3,
                            ActionCode = "delete",
                            ActionName = "删除",
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(9275),
                            CreateUserId = 0,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(9276),
                            ModifyUserId = 0
                        },
                        new
                        {
                            Id = 4,
                            ActionCode = "deit",
                            ActionName = "编辑",
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(9278),
                            CreateUserId = 0,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(9279),
                            ModifyUserId = 0
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.WxGoldDailyPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConsignmentId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("GainTime")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("GoldAmount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SellerRoleName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ServerId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ServerName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("ZoneId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ZoneName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("WxGoldDailyPrice");
                });

            modelBuilder.Entity("devitemapi.Entity.WxMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Icon")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MenuCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("MenuName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("OrderNo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("WxMenus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(4179),
                            CreateUserId = 0,
                            Icon = "el-icon-s-home",
                            MenuCode = "home",
                            MenuName = "首页",
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(4186),
                            ModifyUserId = 0,
                            OrderNo = "000000",
                            ParentId = 0,
                            Path = "/home"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(7224),
                            CreateUserId = 0,
                            Icon = "el-icon-s-tools",
                            MenuCode = "system",
                            MenuName = "系统管理",
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(7229),
                            ModifyUserId = 0,
                            OrderNo = "000200",
                            ParentId = 0,
                            Path = "/system"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(7291),
                            CreateUserId = 0,
                            Icon = "el-icon-user-solid",
                            MenuCode = "user",
                            MenuName = "人员管理",
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(7293),
                            ModifyUserId = 0,
                            OrderNo = "000201",
                            ParentId = 2,
                            Path = "/user"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(7296),
                            CreateUserId = 0,
                            Icon = "el-icon-s-management",
                            MenuCode = "role",
                            MenuName = "角色管理",
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(7297),
                            ModifyUserId = 0,
                            OrderNo = "000202",
                            ParentId = 2,
                            Path = "/role"
                        },
                        new
                        {
                            Id = 5,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(7299),
                            CreateUserId = 0,
                            Icon = "el-icon-menu",
                            MenuCode = "menu",
                            MenuName = "菜单管理",
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(7300),
                            ModifyUserId = 0,
                            OrderNo = "000203",
                            ParentId = 2,
                            Path = "/menu"
                        },
                        new
                        {
                            Id = 6,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(7302),
                            CreateUserId = 0,
                            Icon = "el-icon-info",
                            MenuCode = "about",
                            MenuName = "关于",
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(7304),
                            ModifyUserId = 0,
                            OrderNo = "000300",
                            ParentId = 0,
                            Path = "/about"
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.WxMenuAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("WxMenuActions");
                });

            modelBuilder.Entity("devitemapi.Entity.WxNlogRec", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Action")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Application")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Callsite")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Exception")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Levels")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LogContent")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Logger")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Message")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Operatingaddress")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Operatingtime")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Referrerurl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Requesturl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Userid")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("WxNlogrecs");
                });

            modelBuilder.Entity("devitemapi.Entity.WxPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("WxPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActionId = 1,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(74),
                            CreateUserId = 0,
                            MenuId = 1,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(79),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            ActionId = 2,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1453),
                            CreateUserId = 0,
                            MenuId = 1,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1459),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 3,
                            ActionId = 3,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1561),
                            CreateUserId = 0,
                            MenuId = 1,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1563),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 4,
                            ActionId = 4,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1565),
                            CreateUserId = 0,
                            MenuId = 1,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1567),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 5,
                            ActionId = 1,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1568),
                            CreateUserId = 0,
                            MenuId = 2,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1569),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 6,
                            ActionId = 2,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1571),
                            CreateUserId = 0,
                            MenuId = 2,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1572),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 7,
                            ActionId = 3,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1574),
                            CreateUserId = 0,
                            MenuId = 2,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1575),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 8,
                            ActionId = 4,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1576),
                            CreateUserId = 0,
                            MenuId = 2,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1578),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 9,
                            ActionId = 1,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1579),
                            CreateUserId = 0,
                            MenuId = 3,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1580),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 10,
                            ActionId = 2,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1582),
                            CreateUserId = 0,
                            MenuId = 3,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1583),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 11,
                            ActionId = 3,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1585),
                            CreateUserId = 0,
                            MenuId = 3,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1586),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 12,
                            ActionId = 4,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1588),
                            CreateUserId = 0,
                            MenuId = 3,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1589),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 13,
                            ActionId = 1,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1590),
                            CreateUserId = 0,
                            MenuId = 4,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1591),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 14,
                            ActionId = 2,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1593),
                            CreateUserId = 0,
                            MenuId = 4,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1594),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 15,
                            ActionId = 3,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1596),
                            CreateUserId = 0,
                            MenuId = 4,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1597),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 16,
                            ActionId = 4,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1598),
                            CreateUserId = 0,
                            MenuId = 4,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1600),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 17,
                            ActionId = 1,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1601),
                            CreateUserId = 0,
                            MenuId = 5,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1603),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 18,
                            ActionId = 2,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1604),
                            CreateUserId = 0,
                            MenuId = 5,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1605),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 19,
                            ActionId = 3,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1607),
                            CreateUserId = 0,
                            MenuId = 5,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1608),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 20,
                            ActionId = 4,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1610),
                            CreateUserId = 0,
                            MenuId = 5,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1611),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 21,
                            ActionId = 1,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1613),
                            CreateUserId = 0,
                            MenuId = 6,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1614),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 22,
                            ActionId = 2,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1616),
                            CreateUserId = 0,
                            MenuId = 6,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1617),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 23,
                            ActionId = 3,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1618),
                            CreateUserId = 0,
                            MenuId = 6,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1620),
                            ModifyUserId = 0,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 24,
                            ActionId = 4,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1621),
                            CreateUserId = 0,
                            MenuId = 6,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 255, DateTimeKind.Local).AddTicks(1622),
                            ModifyUserId = 0,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.WxRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("RoleCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoleName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WxRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 253, DateTimeKind.Local).AddTicks(8770),
                            CreateUserId = 0,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 253, DateTimeKind.Local).AddTicks(8792),
                            ModifyUserId = 0,
                            RoleCode = "SuperAdmin",
                            RoleName = "超级管理员",
                            Status = 1
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.WxUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Account")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("BirthDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<string>("Degree")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EMail")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Pwd")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Remark")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserCode")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("WxUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "Administrator",
                            Age = 1,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 251, DateTimeKind.Local).AddTicks(7744),
                            CreateUserId = 0,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 251, DateTimeKind.Local).AddTicks(5455),
                            ModifyUserId = 0,
                            Pwd = "123456",
                            Sex = 1,
                            Status = 0,
                            UserCode = "100001",
                            UserName = "超级管理员"
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.WxUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreateUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ModifyUser")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("ModifyUserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("WxUserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(1725),
                            CreateUserId = 0,
                            ModifyDate = new DateTime(2020, 12, 8, 11, 42, 59, 254, DateTimeKind.Local).AddTicks(1732),
                            ModifyUserId = 0,
                            RoleId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("devitemapi.Entity.WxMenuAction", b =>
                {
                    b.HasOne("devitemapi.Entity.WxMenu", "DevMenu")
                        .WithMany("DevMenuActions")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("devitemapi.Entity.WxPermission", b =>
                {
                    b.HasOne("devitemapi.Entity.WxRole", "WxRole")
                        .WithMany("DevPermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("devitemapi.Entity.WxUserRole", b =>
                {
                    b.HasOne("devitemapi.Entity.WxUser", "User")
                        .WithMany("DevUserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
